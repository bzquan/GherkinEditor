<Window x:Class="Gherkin.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:bc="BetterWpfControls"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:local="clr-namespace:Gherkin.View"
        xmlns:p="clr-namespace:Gherkin.Properties"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:Gherkin.ViewModel"
        xmlns:cmd="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
        mc:Ignorable="d"
        AllowDrop="True"
        Drop="OnDrop"
        PreviewDragOver="OnPreviewDragOver"
        Height="900"
        Width="760"
        Title="{Binding CurrentFilePath}"
        WindowStartupLocation="CenterScreen"
        Loaded="OnWindowLoaded"
        ContentRendered="OnWindowContentRendered"
        Closing="OnClosing">

    <Window.CommandBindings>
        <CommandBinding Command="Find"
                        Executed="OnFindAndReplace"
                        CanExecute="CanExecuteEditorCommand" />
        <CommandBinding Command="New"
                        Executed="OnNew" />
        <CommandBinding Command="Open"
                        Executed="OnOpen" />
        <CommandBinding Command="Save"
                        Executed="OnSave"
                        CanExecute="CanExecuteEditorCommand" />
        <CommandBinding Command="SaveAs"
                        Executed="OnSaveAs"
                        CanExecute="CanExecuteEditorCommand" />
        <CommandBinding Command="Print"
                        Executed="OnPrint"
                        CanExecute="CanExecuteEditorCommand" />
        <CommandBinding Command="PrintPreview"
                        Executed="OnPrintPreview"
                        CanExecute="CanExecuteEditorCommand" />
    </Window.CommandBindings>

    <Window.Resources>
        <BitmapImage x:Key="scenarioIndexImage"
                     UriSource="Images/Index.png" />
        <BitmapImage x:Key="horizontalSplitImage"
                     UriSource="Images/HSplit.png" />
        <BitmapImage x:Key="supportUnicodeImage"
                     UriSource="Images/Unicode.png" />
        <BitmapImage x:Key="messageWindowImage"
                     UriSource="Images/MessageWindow.png" />
        <BitmapImage x:Key="findAndReplaceImage"
                     UriSource="Images/FindAndReplace.png" />

        <!-- local:TabSizeConverter x:Key="tabSizeConverter" / -->
        <local:FontFamilyToNameConverter x:Key="FontFamilyToNameConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>

        <ContextMenu x:Key="editorContextMenu">
            <MenuItem Command="Undo"
                      Header="{x:Static p:Resources.MenuEdit_Undo}"
                      InputGestureText="Ctrl+Z"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Undo.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Redo"
                      Header="{x:Static p:Resources.MenuEdit_Redo}"
                      InputGestureText="Ctrl+Y"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Redo.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Command="Copy"
                      Header="{x:Static p:Resources.MenuEdit_Copy}"
                      InputGestureText="Ctrl+C"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Copy.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Cut"
                      Header="{x:Static p:Resources.MenuEdit_Cut}"
                      InputGestureText="Ctrl+X"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Cut.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Paste"
                      Header="{x:Static p:Resources.MenuEdit_Paste}"
                      InputGestureText="Ctrl+V"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Paste.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="SelectAll"
                      Header="{x:Static p:Resources.MenuEdit_SelectAll}"
                      InputGestureText="Ctrl+A"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/SelectAll.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="Delete"
                      Header="{x:Static p:Resources.MenuEdit_Delete}"
                      InputGestureText="Del"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Delete.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="TabBackward"
                      Header="{x:Static p:Resources.MenuEdit_ContextTabBackward}"
                      InputGestureText="Shift + Tab"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/DeleteTab.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Command="cmd:AvalonEditCommands.IndentSelection"
                      Header="{x:Static p:Resources.MenuEdit_Indentation}"
                      InputGestureText="Ctrl+I"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/Trim.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="cmd:AvalonEditCommands.ShowCodeCompletion"
                      Header="{x:Static p:Resources.MenuEdit_ContextShowCodeCompletion}"
                      InputGestureText="Ctrl+Space"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
            </MenuItem>
            <MenuItem Command="cmd:AvalonEditCommands.CopyFileTo"
                      Header="{x:Static p:Resources.MenuEdit_ContextCopyFileTo}"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <MenuItem.Icon>
                    <Image Source="Images/CopyFileTo.png"
                           Height="16" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        
        <Style x:Key="GridSplitterPreviewStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Fill="#80000000" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridSplitterStyle"
               TargetType="{x:Type GridSplitter}">
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <Setter Property="PreviewStyle"
                    Value="{StaticResource GridSplitterPreviewStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5">
                            <Grid Height="Auto">
                                <StackPanel x:Name="RowCollapsers"
                                            VerticalAlignment="Stretch"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Center">
                                    <bc:ImageButton x:Name="showSubEditorButton"
                                                    Height="10"
                                                    ToolTip="{x:Static p:Resources.Tooltip_ShowSubEditor}"
                                                    Cursor="Arrow"
                                                    Source="Images/Expand.png"
                                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                                                    Command="vm:GherkinEditerCommand.ShowSubEditorCmd">
                                    </bc:ImageButton>
                                    <bc:ImageButton x:Name="hideSubEditorButton"
                                                    Height="10"
                                                    ToolTip="{x:Static p:Resources.Tooltip_HideSubEditor}"
                                                    Cursor="Arrow"
                                                    Source="Images/Collapse.png"
                                                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                                                    Command="vm:GherkinEditerCommand.HideSubEditorCmd">
                                    </bc:ImageButton>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TabControlNormalBorderBrush"
                         Color="#8C8E94" />
    </Window.Resources>

    <!--
    <Window.InputBindings>
        <KeyBinding Key="F3" Command="{Binding FindNextCmd}" CommandParameter="{StaticResource False}" />
        <KeyBinding Key="F3" Modifiers="Shift" Command="{Binding FindNextCmd}" CommandParameter="{StaticResource True}" />
    </Window.InputBindings>
    -->

    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static p:Resources.MenuFile_File}">
                <MenuItem Header="{x:Static p:Resources.MenuFile_New}"
                          Command="New"
                          InputGestureText="Ctrl+N">
                    <MenuItem.Icon>
                        <Image Source="Images/NewFile.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_Open}"
                          Command="Open"
                          InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="Images/Open.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_OpenNewWindow}"
                          Command="{Binding OpenFileInNewWindowCmd}">
                    <MenuItem.Icon>
                        <Image Source="Images/WindowsIcon.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_Save}"
                          Command="Save"
                          InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="Images/Save.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_SaveAs}"
                          Command="SaveAs">
                    <MenuItem.Icon>
                        <Image Source="Images/SaveAs.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_SaveAll}"
                          Command="{Binding SaveAllCmd}">
                    <MenuItem.Icon>
                        <Image Source="Images/SaveAll.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_Print}">
                    <MenuItem.Icon>
                        <Image Source="Images/Print.png"
                               Height="24" />
                    </MenuItem.Icon>
                    <MenuItem Header="{x:Static p:Resources.MenuFile_Print}"
                              Command="Print"
                              InputGestureText="Ctrl+P">
                        <MenuItem.Icon>
                            <Image Source="Images/Print.png"
                                   Height="24" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuFile_PrintPreview}"
                              Command="PrintPreview"
                              InputGestureText="Ctrl+F2">
                        <MenuItem.Icon>
                            <Image Source="Images/PrintPreview.png"
                                   Height="24" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFile_OpenFolder}"
                          Command="{Binding OpenCurrentFolderCmd}">
                    <MenuItem.Icon>
                        <Image Source="Images/OpenExplorer.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="recentFilesMenuItem"
                          Header="{x:Static p:Resources.MenuFile_RecentFiles}"
                          GotFocus="recentFilesMenuItem_GotFocus">
                    <MenuItem.Icon>
                        <Image Source="Images/Recent.png"
                               Height="24" />
                    </MenuItem.Icon>
                    <MenuItem Header="dummy" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEdit_Edit}">
                <MenuItem Command="Undo"
                          Header="{x:Static p:Resources.MenuEdit_Undo}"
                          InputGestureText="Ctrl+Z">
                    <MenuItem.Icon>
                        <Image Source="Images/Undo.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Redo"
                          Header="{x:Static p:Resources.MenuEdit_Redo}"
                          InputGestureText="Ctrl+Y">
                    <MenuItem.Icon>
                        <Image Source="Images/Redo.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="Copy"
                          Header="{x:Static p:Resources.MenuEdit_Copy}"
                          InputGestureText="Ctrl+C">
                    <MenuItem.Icon>
                        <Image Source="Images/Copy.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Cut"
                          Header="{x:Static p:Resources.MenuEdit_Cut}"
                          InputGestureText="Ctrl+X">
                    <MenuItem.Icon>
                        <Image Source="Images/Cut.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Paste"
                          Header="{x:Static p:Resources.MenuEdit_Paste}"
                          InputGestureText="Ctrl+V">
                    <MenuItem.Icon>
                        <Image Source="Images/Paste.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="SelectAll"
                          Header="{x:Static p:Resources.MenuEdit_SelectAll}"
                          InputGestureText="Ctrl+A">
                    <MenuItem.Icon>
                        <Image Source="Images/SelectAll.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Delete"
                          Header="{x:Static p:Resources.MenuEdit_Delete}"
                          InputGestureText="Del">
                    <MenuItem.Icon>
                        <Image Source="Images/Delete.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="cmd:AvalonEditCommands.IndentSelection"
                          Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                          Header="{x:Static p:Resources.MenuEdit_Indentation}"
                          InputGestureText="Ctrl+I">
                    <MenuItem.Icon>
                        <Image Source="Images/Trim.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuView_View}">
                <MenuItem IsCheckable="True"
                          Header="{x:Static p:Resources.MenuView_FoldTables}"
                          Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                          IsChecked="{Binding IsCloseTablesFolding}">
                    <MenuItem.Icon>
                        <Image Source="Images/Table.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem IsCheckable="True"
                          Header="{x:Static p:Resources.MenuView_FoldScenario}"
                          Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                          IsChecked="{Binding IsCloseScenarioFolding}">
                    <MenuItem.Icon>
                        <Image Source="Images/Scenario.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding OpenAllFoldingsCmd}"
                          Header="{x:Static p:Resources.MenuView_FoldOpenAll}"
                          Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}">
                    <MenuItem.Icon>
                        <Image Source="Images/OpenAllFoldings.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem IsCheckable="True"
                          Header="{x:Static p:Resources.MenuView_ShowScenarioIndex}"
                          Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                          IsChecked="{Binding ShowScenarioIndex}"
                          IsEnabled="{Binding IsShowScenarioIndexEnabled}">
                    <MenuItem.Icon>
                        <Image Source="Images/Index.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem IsCheckable="True"
                          Header="{x:Static p:Resources.MenuView_SplitEditor}"
                          IsChecked="{Binding ShowSplitView}">
                    <MenuItem.Icon>
                        <Image Source="Images/HSplit.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem IsCheckable="True"
                          StaysOpenOnClick="True"
                          IsChecked="{Binding Path=GherkinSettings.PropertyGridViewModel.ShowColumnRuler}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Static p:Resources.MenuSetting_ShowColumnRuler}" />
                            <xctk:IntegerUpDown Margin="10, 0, 0, 0"
                                                FormatString="N0"
                                                AllowTextInput="False"
                                                Value="{Binding Path=GherkinSettings.PropertyGridViewModel.ColumnRulerPositon, Mode=TwoWay, FallbackValue=100}"
                                                Visibility="{Binding Path=GherkinSettings.PropertyGridViewModel.ShowColumnRuler, Converter={StaticResource BoolToVisibility}}"
                                                Increment="5"
                                                Minimum="60"
                                                Maximum="160"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuFind_Search}">
                <MenuItem Command="Find"
                          Header="{x:Static p:Resources.MenuFind_FindReplace}"
                          InputGestureText="Ctrl+F">
                    <MenuItem.Icon>
                        <Image Source="Images/FindAndReplace.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding GrepCmd}"
                          Header="{x:Static p:Resources.MenuFind_Grep}">
                    <MenuItem.Icon>
                        <Image Source="Images/SearchFolder.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuCompile_Comple}"
                      Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}">
                <MenuItem Command="{Binding GenCPPTestCodeCmd}"
                          Header="{x:Static p:Resources.MenuCompile_GenCpp}">
                    <MenuItem.Icon>
                        <Image Source="Images/Gencode.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem IsCheckable="True"
                          Header="{x:Static p:Resources.MenuCompile_SupportUnicode}"
                          IsChecked="{Binding GherkinSettings.PropertyGridViewModel.SupportUnicode}">
                    <MenuItem.Icon>
                        <Image Source="Images/Unicode.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuTool_Tools}">
                <MenuItem Header="{x:Static p:Resources.MenuTool_SaveAsPDF}">
                    <MenuItem.Icon>
                        <Image Source="Images/PDF.png"
                               Height="24" />
                    </MenuItem.Icon>
                    <MenuItem Header="{x:Static p:Resources.MenuTool_SaveAsPDFBySharpPDF}"
                              Command="{Binding SaveAsPDFBySharpPDFCmd}">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuTool_SaveAsPDFByWord}"
                              Command="{Binding SaveAsPDFByWordCmd}">
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuTool_SaveAsXPS}"
                          Command="{Binding SaveAsXPSCmd}">
                    <MenuItem.Icon>
                        <Image Source="Images/XPS.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuTool_SaveAsRTF}"
                          Command="{Binding SaveAsRTFCmd}">
                    <MenuItem.Icon>
                        <Image Source="Images/RTF.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuTool_SaveAsWord}"
                          Command="{Binding SaveAsWordCmd}">
                    <MenuItem.Icon>
                        <Image Source="Images/Word.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuSetting_Setting}">
                <MenuItem Command="{Binding Path=GherkinSettings.ShowEditorSettingCmd}"
                          Header="{x:Static p:Resources.MenuSetting_SettingMenuHeader}">
                    <MenuItem.Icon>
                        <Image Source="Images/Setting.png"
                               Height="24" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuSetting_ChangeLanguage}">
                    <MenuItem.Icon>
                        <Image Source="Images/LanguageChange.png"
                               Height="24" />
                    </MenuItem.Icon>
                    <MenuItem Header="English"
                              Command="{Binding GherkinSettings.ChangeLanguageCmd}"
                              CommandParameter="English">
                        <MenuItem.Icon>
                            <Image Source="Images/en.png"
                                   Height="12" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="日本語"
                              Command="{Binding GherkinSettings.ChangeLanguageCmd}"
                              CommandParameter="日本語">
                        <MenuItem.Icon>
                            <Image Source="Images/ja.png"
                                   Height="12" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="中文"
                              Command="{Binding GherkinSettings.ChangeLanguageCmd}"
                              CommandParameter="中文">
                        <MenuItem.Icon>
                            <Image Source="Images/zh-hans.png"
                                   Height="12" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuHelp_Help}">
                <MenuItem Header="{x:Static p:Resources.MenuHelp_GherkinHelp}"
                          Command="{Binding ShowHelpCmd}" />
                <MenuItem Header="{x:Static p:Resources.MenuHelp_GherkinKeywords}"
                          Click="OnGherkinKeywordsMenuClicked" />
                <MenuItem Header="{x:Static p:Resources.MenuHelp_LaTeXSymbols}"
                          Command="{Binding ShowLaTeXSymbolsCmd}" />
                <MenuItem Header="{x:Static p:Resources.MenuHelp_About}"
                          Command="{Binding AboutViewModel.AboutGherkinCmd}" />
            </MenuItem>
        </Menu>
        <ToolBar x:Name="toolBar"
                 DockPanel.Dock="Top"
                 BorderBrush="LightGray"
                 BorderThickness="1">
            <ToolBar.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}"
                                     Value="False">
                            <Setter Property="Opacity"
                                    Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Resources>
            <Button ToolTip="{x:Static p:Resources.Tooltip_NewFile}"
                    Command="New">
                <Image Source="Images/NewFile.png"
                       Height="16" />
            </Button>
            <Button ToolTip="{x:Static p:Resources.Tooltip_OpenFile}"
                    Command="Open">
                <Image Source="Images/Open.png"
                       Height="16" />
            </Button>
            <Button ToolTip="{x:Static p:Resources.Tooltip_SaveFile}"
                    Command="Save">
                <Image Source="Images/Save.png"
                       Height="16" />
            </Button>
            <Button Command="{Binding SaveAllCmd}"
                    ToolTip="{x:Static p:Resources.Tooltip_SaveAllFiles}">
                <Image Source="Images/SaveAll.png"
                       Height="16" />
            </Button>
            <Separator />
            <Button Command="Find"
                    ToolTip="{x:Static p:Resources.MenuFind_FindReplace}">
                <Image Source="Images/FindAndReplace.png"
                       Height="16" />
            </Button>
            <Button Command="Copy"
                    ToolTip="{x:Static p:Resources.MenuEdit_Copy}">
                <Image Source="Images/Copy.png"
                       Height="16" />
            </Button>
            <Button Command="Cut"
                    ToolTip="{x:Static p:Resources.MenuEdit_Cut}">
                <Image Source="Images/Cut.png"
                       Height="16" />
            </Button>
            <Button Command="Paste"
                    ToolTip="{x:Static p:Resources.MenuEdit_Paste}">
                <Image Source="Images/Paste.png"
                       Height="16" />
            </Button>
            <Button Command="Delete"
                    ToolTip="{x:Static p:Resources.MenuEdit_Delete}">
                <Image Source="Images/Delete.png"
                       Height="16" />
            </Button>
            <Separator />
            <Button Command="Undo"
                    ToolTip="{x:Static p:Resources.MenuEdit_Undo}">
                <Image Source="Images/Undo.png"
                       Height="16" />
            </Button>
            <Button Command="Redo"
                    ToolTip="{x:Static p:Resources.MenuEdit_Redo}">
                <Image Source="Images/Redo.png"
                       Height="16" />
            </Button>
            <Button Command="cmd:AvalonEditCommands.IndentSelection"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                    ToolTip="{x:Static p:Resources.MenuEdit_Indentation}">
                <Image Source="Images/Trim.png"
                       Height="16" />
            </Button>
            <Separator />
            <CheckBox ToolTip="{x:Static p:Resources.Tooltip_ShowScenarioIndex}"
                      Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                      IsChecked="{Binding ShowScenarioIndex}"
                      IsEnabled="{Binding IsShowScenarioIndexEnabled}">
                <Image Source="{Binding ScenarioIndexIcon, FallbackValue={StaticResource scenarioIndexImage}}"
                       Height="16" />
            </CheckBox>
            <CheckBox ToolTip="{x:Static p:Resources.Tooltip_SplitEditor}"
                      IsChecked="{Binding ShowSplitView}">
                <Image Source="{Binding HorizontalSplitIcon, FallbackValue={StaticResource horizontalSplitImage}}"
                       Height="16" />
            </CheckBox>
            <Button Command="{Binding GenCPPTestCodeCmd}"
                    Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                    ToolTip="{x:Static p:Resources.MenuCompile_GenCpp}">
                <Image Source="Images/Gencode.png"
                       Height="16" />
            </Button>
            <CheckBox ToolTip="{x:Static p:Resources.MenuCompile_SupportUnicode}"
                      Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                      IsChecked="{Binding GherkinSettings.PropertyGridViewModel.SupportUnicode}">
                <Image Source="{Binding GherkinSettings.PropertyGridViewModel.SupportUnicodeIcon, FallbackValue={StaticResource supportUnicodeImage}}"
                       Height="16" />
            </CheckBox>
            <Button Name="gherkinKeywordsButton"
                    Visibility="{Binding Path=IsFeatureFile, Converter={StaticResource BoolToVisibility}}"
                    ToolTip="{Binding GherkinSettings.GherkinKeywords}"
                    ToolTipService.ShowDuration="600000">
                <Image Source="Images/WordIcon.png"
                       Height="16" />
            </Button>
            <ComboBox Name="fontComboBox"
                      MinWidth="40"
                      ToolTip="{x:Static p:Resources.Tooltip_FontForGherkin}"
                      SelectedItem="{Binding CurrentFontFamily, Mode=TwoWay}"
                      ItemsSource="{Binding SystemFonts}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Converter={StaticResource FontFamilyToNameConverter}, Mode=OneWay}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <xctk:IntegerUpDown FormatString="N0"
                                AllowTextInput="False"
                                Value="{Binding CurrentFontSize, Mode=TwoWay, FallbackValue=10}"
                                Increment="1"
                                Minimum="10"
                                Maximum="28"
                                ToolTip="{x:Static p:Resources.Tooltip_FontSize}" />
            <Button Name="createHighlightingFilesButton"
                    Command="{Binding GherkinSettings.CreateHighlightingFilesCmd}"
                    ToolTip="Create Gherkin highlighting files"
                    Visibility="{Binding Path=GherkinSettings.showCreateHighlightingFilesButton, Converter={StaticResource BoolToVisibility}}">
                <Image Source="Images/CreateHighlightingFiles.png"
                       Height="16" />
            </Button>
            <Button Name="createKeywordsFileButton"
                    Command="{Binding GherkinSettings.CreateKeywordsFileCmd}"
                    ToolTip="Create Gherkin language specific keywords file"
                    Visibility="{Binding Path=GherkinSettings.showCreateHighlightingFilesButton, Converter={StaticResource BoolToVisibility}}">
                <Image Source="Images/Keywords.png"
                       Height="16" />
            </Button>
            <!--
            <local:FindReplacePopup
                IsOpen="{Binding ShowFindReplace}"
                PlacementTarget="{Binding ElementName=editorTabControl}"
                Placement="Right"
                VerticalOffset="24"
                HorizontalOffset="-400">
            </local:FindReplacePopup>
            -->
        </ToolBar>
        <StatusBar Name="statusbar"
                   DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem  Grid.Column="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <bc:ImageButton x:Name="clearStatusButton"
                                    Source="Images/Reset.png"
                                    Height="20"
                                    ToolTip="{x:Static p:Resources.Tooltip_ClearStatus}"
                                    Command="{Binding Path=ClearStatusCmd}"/>

                    <TextBlock Grid.Column="1" Text="{Binding Status}" />
                </Grid>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <Border BorderBrush="DarkGray" BorderThickness="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=Codepage}" VerticalAlignment="Center" />
                        <bc:ImageButton x:Name="codePageButton"
                                        ToolTip="{x:Static p:Resources.Status_CodePageListTitle}"
                                        Visibility="{Binding Path=CanShowCodePageList, Converter={StaticResource BoolToVisibility}}"
                                        Command="{Binding Path=ShowCodePageListCmd}"
                                        Source="Images/ReloadFile.png"
                                        Height="16" />
                        <local:CodePageListPopup IsOpen="{Binding Path=CodePageListPopupViewModel.ShowCodePageList}"
                                                 PlacementTarget="{Binding ElementName=codePageButton}"
                               Placement="Top"
                               StaysOpen="True">
                        </local:CodePageListPopup>
                    </StackPanel>
                </Border>
            </StatusBarItem>
        </StatusBar>
        <Grid x:Name="mainGrid"
              Margin="2, 0, 2, 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="100*" />
                <RowDefinition Height="Auto" />
                <vm:HiddenableRowDefinition Height="20*"
                                            IsHidden="{Binding Path=WorkAreaEditor.HideMessageWindow}" />
            </Grid.RowDefinitions>
            <bc:TabControl x:Name="editorTabControl"
                           Grid.Row="0"
                           ItemsSource="{Binding TabPanels}"
                           ShowQuickLinksButton="True"
                           SelectedIndex="{Binding SelectedTabIndex}">
                <bc:TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type bc:TabItem}"
                           BasedOn="{StaticResource {x:Type bc:TabItem}}">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem Header="{x:Static p:Resources.MenuFile_Save}"
                                              Command="{Binding SaveCmd}"
                                              InputGestureText="Ctrl+S">
                                        <MenuItem.Icon>
                                            <Image Source="Images/Save.png"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuFile_SaveAs}"
                                              Command="{Binding SaveAsCmd}">
                                        <MenuItem.Icon>
                                            <Image Source="Images/SaveAs.png"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuTab_Close}"
                                              Command="{Binding CloseCmd}">
                                        <MenuItem.Icon>
                                            <Image Source="Images/Close.png"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuTab_CloseAllDocuments}"
                                              Command="{Binding CloseAllDocumentsCmd}">
                                        <MenuItem.Icon>
                                            <Image Source="Images/CloseAllDocuments.png"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuTab_CloseAllButThis}"
                                              Command="{Binding CloseAllButThisCmd}">
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuTab_Rename}"
                                              Command="{Binding RenameCmd}">
                                        <MenuItem.Icon>
                                            <Image Source="Images/Rename.png"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuFile_OpenFolder}"
                                              Command="{Binding OpenCurrentFolderCmd}">
                                        <MenuItem.Icon>
                                            <Image Source="Images/OpenExplorer.png"
                                                   Height="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static p:Resources.MenuTab_OpenInNewEditor}"
                                              Command="{Binding OpenInNewEditorCmd}">
                                    </MenuItem>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Header"
                                Value="{Binding FileName}" />
                    </Style>
                </bc:TabControl.ItemContainerStyle>
                <bc:TabControl.ScrollToLeftContent>
                    <Button bc:ScrollablePanel.IsScroller="True"
                            Padding="0"
                            Margin="0,0,2,0"
                            ToolTip="{x:Static p:Resources.Tooltip_ScrollLeft}"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <local:AutoGreyableImage Source="Images/ScrollLeft.png"
                                                 Height="16" />
                    </Button>
                </bc:TabControl.ScrollToLeftContent>
                <bc:TabControl.ScrollToRightContent>
                    <Button bc:ScrollablePanel.IsScroller="True"
                            Padding="0"
                            Margin="2,0,0,0"
                            ToolTip="{x:Static p:Resources.Tooltip_ScrollRight}"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <local:AutoGreyableImage Source="Images/ScrollRight.png"
                                                 Height="16" />
                    </Button>
                </bc:TabControl.ScrollToRightContent>

                <bc:TabControl.Resources>
                    <!-- Header -->
                    <DataTemplate x:Key="tabItemHeader"
                                  DataType="local:EditorTab">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    ToolTip="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabItem}, Path=DataContext.FilePath}">
                            <bc:ImageButton x:Name="modificationStatus"
                                            Height="16"
                                            Margin="0,0,2,0"
                                            Source="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabItem}, Path=DataContext.DocumentModificationStatusIcon}"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabItem}, Path=DataContext.SaveCmd}"
                                            ToolTip="{x:Static p:Resources.Tooltip_SaveFile}">
                            </bc:ImageButton>
                            <TextBlock Name="tabTextBlock"
                                       Text="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabItem}, Path=DataContext.FileName}" />
                            <bc:ImageButton Name="deleteTab"
                                            Margin="2,0,0,0"
                                            Height="16"
                                            Source="Images/DeleteTab.png"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabItem}, Path=DataContext.CloseCmd}">
                            </bc:ImageButton>
                        </StackPanel>
                    </DataTemplate>
                    <!-- Content -->
                    <DataTemplate x:Key="editorDataTemplate"
                                  DataType="{x:Type local:EditorTabContent}">
                        <Grid Name="scenarioIndexGrid">
                            <Grid.ColumnDefinitions>
                                <vm:HiddenableColumnDefinition Width="20*"
                                                               IsHidden="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabContent}, Path=DataContext.HideScenarioIndex}" />
                                <ColumnDefinition Width="80*" />
                            </Grid.ColumnDefinitions>
                            <Grid Name="scenarioIndexListGrid"
                                  Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0"
                                      HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderThickness="1"
                                            BorderBrush="Goldenrod"
                                            Background="LightGray">
                                        <TextBlock Grid.Column="0"
                                                   Text="{x:Static p:Resources.Message_ScenarioIndex}"
                                                   HorizontalAlignment="Center" />
                                    </Border>
                                    <Button Grid.Column="1"
                                            Margin="0, 0, 10, 0"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabContent}, Path=DataContext.HideScenarioIndexCmd}">
                                        <Image Source="Images/PullDown1.png"
                                               Height="12"
                                               Width="12" />
                                    </Button>
                                </Grid>
                                <ListBox Margin="0, 0, 6, 0"
                                         Grid.Row="1"
                                         HorizontalAlignment="Stretch"
                                         ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabContent}, Path=DataContext.ScenarioIndexes}"
                                         SelectedIndex="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabContent}, Path=DataContext.SelectedScenarioIndex}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl Content="{Binding Path=Title}">
                                            </ContentControl>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                            <GridSplitter Name="vsplitter"
                                          Width="5"
                                          BorderBrush="DarkGoldenrod"
                                          BorderThickness="1"
                                          VerticalAlignment="Stretch" />
                            <Grid Name="editGrid"
                                  Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50*" />
                                    <RowDefinition Height="Auto"/>
                                    <vm:HiddenableRowDefinition Height="50*"
                                                                IsHidden="{Binding RelativeSource={RelativeSource AncestorType=local:EditorTabContent}, Path=DataContext.HideSplitView}" />
                                </Grid.RowDefinitions>
                                <avalonEdit:TextEditor Name="mainEditor"
                                                       Grid.Row="0"
                                                       ContextMenu="{StaticResource editorContextMenu}" />
                                <GridSplitter Name="hsplitter"
                                              Grid.Row="1"
                                              Height="10"
                                              BorderBrush="DarkGoldenrod"
                                              BorderThickness="1"
                                              HorizontalAlignment="Stretch"
                                              Style="{DynamicResource GridSplitterStyle}" />
                                <avalonEdit:TextEditor Name="subEditor"
                                                       Grid.Row="2"
                                                       ContextMenu="{StaticResource editorContextMenu}" />
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </bc:TabControl.Resources>
            </bc:TabControl>

            <GridSplitter Name="bottomHSplitter"
                          Grid.Row="1"
                          Height="10"
                          BorderBrush="DarkGoldenrod"
                          Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                          BorderThickness="1"
                          HorizontalAlignment="Stretch">
                <GridSplitter.Style>
                    <Style TargetType="{x:Type GridSplitter}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridSplitter}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="5">
                                        <Grid Height="Auto">
                                            <StackPanel x:Name="RowCollapsers"
                                                        VerticalAlignment="Stretch"
                                                        Orientation="Horizontal"
                                                        HorizontalAlignment="Center">
                                                <bc:ImageButton x:Name="showWorkAreaButton"
                                                                Height="10"
                                                                ToolTip="{x:Static p:Resources.Tooltip_ShowWorkAreaEditor}"
                                                                Cursor="Arrow"
                                                                Source="Images/Expand.png"
                                                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                                                                Command="{Binding Path=WorkAreaEditor.ShowMessageWindowCmd}">
                                                </bc:ImageButton>
                                                <bc:ImageButton x:Name="hideWorkAreaButton"
                                                                Height="10"
                                                                ToolTip="{x:Static p:Resources.Tooltip_HideWorkAreaEditor}"
                                                                Cursor="Arrow"
                                                                Source="Images/Collapse.png"
                                                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"
                                                                Command="{Binding Path=WorkAreaEditor.HideMessageWindowCmd}">
                                                </bc:ImageButton>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>

            <Popup x:Name="cppCodeGenResultUagePopup"
                   IsOpen="{Binding Path=WorkAreaEditor.ShowCPPCodeGenResultUsagePopup}"
                   PlacementTarget="{Binding ElementName=bottomHSplitter}"
                   Placement="Right"
                   HorizontalOffset="-480"
                   VerticalOffset="12"
                   StaysOpen="True">

                <Border BorderBrush="Goldenrod"
                        BorderThickness="1">
                    <StackPanel Background="LightGray"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <bc:ImageButton DockPanel.Dock="Right"
                                        Source="Images/DeleteTab.png"
                                        VerticalAlignment="Top"
                                        Height="16"
                                        Command="{Binding Path=WorkAreaEditor.CloseCPPCodeGenResultUagePopupCmd}">
                        </bc:ImageButton>
                        <TextBlock VerticalAlignment="Center"
                                   Foreground="Blue"
                                   Text="{x:Static p:Resources.Tooltip_CPPCodeGenResultUage}" />
                    </StackPanel>
                </Border>
            </Popup>

            <avalonEdit:TextEditor Name="messageTextEditor"
                                   Grid.Row="2"
                                   ContextMenu="{StaticResource editorContextMenu}" />
        </Grid>
    </DockPanel>
</Window>
